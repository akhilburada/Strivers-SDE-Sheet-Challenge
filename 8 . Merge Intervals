from os import *
from sys import *
from collections import *
from math import *

from sys import stdin,setrecursionlimit

class Solution:
    def __init__ (self, start, end):
        self.start = start
        self.end = end

def mergeIntervals(intervals):
    # Write your code here.
    def merge(p1, p2):
        if(p1[1] >= p2[0]):
            return True
        return False

    res = []
    n = len(intervals)
    pair = [intervals[0].start, intervals[0].end]
    for i in range(1, n):
        #check can they merge together or not
        if(merge(pair, [intervals[i].start, intervals[i].end])):
            pair = [pair[0], intervals[i].end]
        else:
            res.append(pair)
            pair = [intervals[i].start, intervals[i].end]
    res.append(pair)
    #print(res)
    return res

n = int(input())
arr1 = list(map(int, stdin.readline().strip().split(" ")))
arr2 = list(map(int, stdin.readline().strip().split(" ")))
arr1.sort()
arr2.sort()
intervals = []
for i in range(n):
    a = Solution(arr1[i], arr2[i])
    intervals.append(a)

res = mergeIntervals(intervals)

for i in range(len(res)):
    print(*res[i])
