from os import *
from sys import *
from collections import *
from math import *
global p 
p = 0
def merge(arr, low, mid, high):
    global p 
    left = low
    right = mid+1
    while(left <= mid and right <= high):
        if(arr[left] > (2*arr[right])):
            p += (mid-left+1)
            right += 1
        else:
            left += 1
    tmp = []
    left = low
    right = mid+1
    while(left <= mid and right <= high):
        if(arr[left] <= arr[right]):
            tmp.append(arr[left])
            left += 1
        else:
            tmp.append(arr[right])
            right += 1

    while(left <= mid):
        tmp.append(arr[left])
        left += 1
    while(right <= high):
        tmp.append(arr[right])
        right += 1

    for i in range(low,high+1):
        arr[i] = tmp[i-low]

def mergeSort(arr, low, high):
    if(low >= high):
        return
    mid = (low+high) // 2
    mergeSort(arr, low, mid)
    mergeSort(arr, mid+1, high)
    merge(arr, low, mid, high)
    
def reversePairs(arr, n):
    global p 
    p = 0
    mergeSort(arr, 0, n-1)
    return p
