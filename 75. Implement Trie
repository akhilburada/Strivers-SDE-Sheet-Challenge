from sys import stdin,setrecursionlimit
setrecursionlimit(10**7)

class Node:
    def __init__(self):
        self.links = [None for i in range(26)]
        self.flag = False

    def containsKey(self, ch):
        return self.links[ord(ch) - ord('a')] != None

    def put(self, ch, node):
        self.links[ord(ch) - ord('a')] = node

    def get(self, ch):
        return self.links[ord(ch) - ord('a')]

    def setEnd(self):
        self.flag = True

    def isEnd(self):
        return self.flag


class Trie :

    def __init__(self) :
        self.root = Node()
    
    def insert(self, string) :
        node = self.root
        for i in string:
            if(not node.containsKey(i)):
                node.put(i, Node())
            node = node.get(i)
        node.setEnd()
            
    def search(self, word) :
        node = self.root
        for i in word:
            if not node.containsKey(i):
                return False
            node = node.get(i)
        return node.isEnd()

        
    def startWith(self, prefix) :
        node = self.root
        for i in prefix:
            if not node.containsKey(i):
                return False
            node = node.get(i)
        return True



# main
t = int(input().strip())
root = Trie()
for i in range(t) :

    q_str = stdin.readline().strip().split(" ")
    q = int(q_str[0].strip())
    str1 = q_str[1].strip()

    if(q == 1) :
        root.insert(str1)
    
    elif (q == 2) :
        if(root.search(str1)) :
            print("true") 

        else :
            print("false")
        
    else :
        if(root.startWith(str1)) :
            print("true")

        else :
            print("false")

